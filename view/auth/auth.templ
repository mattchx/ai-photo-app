package auth

import "ai-photo-app/view/layout"
import "github.com/nedpals/supabase-go"

type SignupParams struct {
	Email           string
	Password        string
	ConfirmPassword string
}

type SignupErrors struct {
	Email           string
	Password        string
	ConfirmPassword string
}

templ SignupSuccess(email string) {
	<div>
		A confirmation email has been sent to: <span class="font-semibold text-success"> { email }</span>
	</div>
}

templ Signup() {
	@layout.App(false) {
		<div class="flex justify-center mt-[calc(100vh-100vh+8rem)]">
			<div class="max-w-screen-sm w-full bg-base-300 py-16 px-32 rounded-xl">
				<h1 class="text-center text-xl font-black">Signup for the AI PHOTO APP</h1>
				@SignupForm(SignupParams{}, SignupErrors{})
			</div>
		</div>
	}
}

templ SignupForm(params SignupParams, errors SignupErrors) {
	<form
		hx-post="/signup"
		hx-swap="outerHTML"
		class="space-y-2"
	>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Email</span>
			</div>
			<input type="email" value={ params.Email } name="email" placeholder="Email" class="input input-bordered w-full"/>
			if len(errors.Email) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Email }</span>
				</div>
			}
		</label>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Password</span>
			</div>
			<input type="password" name="password" placeholder="Password" class="input input-bordered w-full"/>
			if len(errors.Password) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Password }</span>
				</div>
			}
		</label>
		<label class="form-control w-full mb-10">
			<div class="label">
				<span class="label-text">Confirm password</span>
			</div>
			<input type="password" name="confirmPassword" placeholder="Confirm password" class="input input-bordered w-full"/>
			if len(errors.Password) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.ConfirmPassword }</span>
				</div>
			}
		</label>
		<button class="btn btn-primary w-full mt-10" type="submit">Sign Up<i class="fa-solid fa-arrow-right"></i></button>
	</form>
}

type LoginErrors struct {
	Email              string
	Password           string
	InvalidCredentials string
}

templ Login() {
	@layout.App(false) {
		<div class="flex justify-center mt-[calc(100vh-100vh+8rem)]">
			<div class="max-w-screen-sm w-full bg-base-300 py-16 px-32 rounded-xl">
				<h1 class="text-center text-xl font-black">Log into AI PHOTO APP</h1>
				@LoginForm(supabase.UserCredentials{}, LoginErrors{})
			</div>
		</div>
	}
}

templ LoginForm(params supabase.UserCredentials, errors LoginErrors) {
	<form
		hx-post="/login"
		hx-swap="outerHTML"
		class="space-y-2"
	>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Email</span>
			</div>
			<input type="email" value={ params.Email } name="email" placeholder="Email" class="input input-bordered w-full"/>
			if len(errors.Email) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Email }</span>
				</div>
			}
		</label>
		<label class="form-control w-full">
			<div class="label">
				<span class="label-text">Password</span>
			</div>
			<input type="password" name="password" placeholder="Password" class="input input-bordered w-full"/>
			if len(errors.Password) > 0 {
				<div class="label">
					<span class="label-text-alt text-error">{ errors.Password }</span>
				</div>
			}
		</label>
		if len(errors.InvalidCredentials) > 0 {
			<div class="text-sm text-error">{ errors.InvalidCredentials }</div>
		}
		<button class="btn btn-primary w-full">Log In <i class="fa-solid fa-arrow-right"></i></button>
	</form>
}

templ CallbackScript() {
  <script>
    var url = window.location.href;
    var newURL = url.replace("#", "?")
    window.location = newURL
  </script>
}